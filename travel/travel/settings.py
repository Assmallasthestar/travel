"""
Django settings for travel project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^dxlt(4d&&vw9%hs9m6pjkdj2w&p+xpl)s)^adx(kmu6*d9^q+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'django_filters',
    'rest_framework_simplejwt',
    # 富文本编辑器
    'ckeditor',
    # 富文本编辑器上传图片模块
    'ckeditor_uploader',
    'strategy',
    'recommend',
    'wx'
]

MIDDLEWARE = [
    # 'wx.middlewares.MiddlewareHead',  # 允许进行跨域访问
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 支持跨域请求
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'travel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'travel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'travel',
        'USER': "root",
        "PASSWORD": '123456',
        "PORT": 3306,
        "HOST": "localhost"
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False
# 这里务必调整为False，否则时区设置无效


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# 允许所有的用户跨域请求
CORS_ORIGIN_ALLOW_ALL = True

# 指定自定义用户类
AUTH_USER_MODEL = 'wx.WxUser'

# 使用自定义认证类进行身份认证（登录时验证用户信息）
AUTHENTICATION_BACKENDS = [
    'common.authenticate.MyBackend',
]

# DRF的配置
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',   # Basic认证
        'rest_framework.authentication.SessionAuthentication',   # session认证
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # 通过 JWT 进行用户验证，验证过程需要访问数据库
        'rest_framework_simplejwt.authentication.JWTTokenUserAuthentication',  # 通过 JWT 的 Token 进行用户验证，验证过程不需要访问数据库
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 所有接口权限认证
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.SearchFilter',
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter'
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
}
# 微信小程序 AppID 和 AppSecret
WX_APP_ID = 'xxxxxxxxxxxxxx'
WX_APP_SECRET = 'xxxxxxxxxxxxxxxxx'
JWT_SIGNING_KEY = '******'

SIMPLE_JWT = {
    # 访问令牌的有效时间
    'ACCESS_TOKEN_LIFETIME': timedelta(days=15),
    # 刷新令牌的有效时间
    'REFRESH_TOKEN_LIFETIME': timedelta(days=15),

    # 若为True，则刷新后新的refresh_token有更新的有效时间
    'ROTATE_REFRESH_TOKENS': False,
    # 若为True，刷新后的token将添加到黑名单
    'BLACKLIST_AFTER_ROTATION': True,

    # 对称算法：HS256 HS384 HS512 非对称算法：RSA
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    # if signing_key, verifying_key will be ignore.
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    # AUthorization:Bearer <token>
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': "HTTP_AUTHORIZATION",
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(days=15),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=15),
}

#  文件上传的保存的路径
MEDIA_ROOT = BASE_DIR / 'file/image'
# 指定文件的获取的url路径
MEDIA_URL = 'file/image/'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',  # 工具条功能
        'height': 300,  # 编辑器高度
        'width': 800,  # 编辑器宽
    },
}

# 上传图片保存路径，如果没有图片存储或者使用自定义存储位置，那么则直接写  ' ' ,如果是使用django本身的存储方式，那么你就指名一个目录用来存储即可。
CKEDITOR_UPLOAD_PATH = ''

# Logo链接
SIMPLEUI_LOGO = 'https://img1.baidu.com/it/u=2004623029,50306652&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500'

# 隐藏右侧SimpleUI广告链接和使用分析
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
